from kalman_filter import KalmanFilter
from util import plot_points_2D, accuracy

    
kf = KalmanFilter(60)

# measurements = [
#     [0.5, 0.5, 0.1],
#     [1.5, 1.5, 1.5],
#     [2.7, 3.0, 2.5],
#     [3.5, 4.5, 3.5],
#     [4.2, 5.5, 4.8],
#     [5.0, 7.0, 6.0],
#     [5.8, 8.5, 7.2],
#     [6.0, 10.0, 8.0],
#     [5.5, 11.2, 7.5],
#     [4.7, 12.0, 6.8],
#     [3.5, 12.5, 6.0],
#     [2.5, 11.5, 5.0],
#     [1.5, 10.0, 4.2],
#     [0.8, 8.5, 3.5],
#     [0.3, 7.0, 3.0],
#     [0.7, 5.5, 2.5],
#     [1.5, 4.0, 2.0],
#     [2.5, 2.5, 1.5],
#     [3.0, 1.5, 1.0],
#     [3.5, 0.5, 0.1],
#     [3.5, 0, 0.1],
#     ]

measurements = [
    [0.5, 0.5],
    [1.5, 1.5],
    [2.7, 3.0],
    [3.5, 4.5],
    [4.2, 5.5],
    [5.0, 7.0],
    [5.8, 8.5],
    [6.0, 10.0],
    [5.5, 11.2],
    [4.7, 12.0],
    [3.5, 12.5],
    [2.5, 11.5],
    [1.5, 10.0],
    [0.8, 8.5],
    [0.3, 7.0],
    [0.7, 5.5],
    [1.5, 4.0],
    [2.5, 2.5],
    [3.0, 1.5],
    [3.5, 0.5],
    [3.5, 0],
    ]

measurements = [
    [647,322]
    [654,308]
    [664,295]
    [710,281]
    [719,283]
    [710,259]
    [607,310]
    [608,313]
    [614,313]
    [584,330]
    [566,341]
    [552,354]
    [548,355]
    [519,386]
    [503,406]
    [503,403]
    [492,421]
    [477,439]
    [479,441]
    [465,457]
    [454,475]
    [448,421]
    [446,379]
    [450,382]
    [449,326]
    [451,328]
    [448,305]
    [449,288]
    [448,276]
    [452,266]
    [450,249]
    [453,244]
    [455,241] 
]

yolo_output = [
    [309.5, 261.5],
    [304.5, 257],
    [302, 252],
    [297.5, 250],
    [293.5, 246],
    [290.5, 249.5],
    [287.5, 250.5],
    [283.5, 255],
    [277.5, 266],
    [275.5, 274],
    [273, 278.5],
    [260.5, 273],
    [258.5, 252.5],
    [253.5, 252],
    [250.5, 246], # Was a gap here
    [248, 240.5],
    [244.5, 236.5],
    [240, 233.5],
    [240.5, 233.5],
    [236, 236],
    [273.5, 251.5],
    [230.5, 247],
    [228.5, 253.5],
    [221.5, 275.5],
    [216.5, 297.5],
    [211, 325.5]
]
count = 0
kf_points = [[0.5, 0.5]]
for point in measurements:
    kf.update(point)
    hit_floor, mu, sigma = kf.predict()
    
    if hit_floor:
        count = count + 1
        print(f'Ball hit the floor at point {point}')
    
    kf_points.append(mu)

print(f'Ball hit floor {count} times')
print(f'Predicted points {kf_points}')

plot_points_2D(kf_points, measurements)
accur = accuracy(kf_points, measurements)
print(accur)
